/*MIT LicenseCopyright (c) 2018 Matthias Müller-Prove http://mprove.de :: http://mprove.de/leibnizmapsPermission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the "Software"), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in allcopies or substantial portions of the Software.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THESOFTWARE.*///------------------------------------------------------------------------------// filterTable//			via https://www.w3schools.com/howto/howto_js_filter_table.asp//function filterTable(){	var input, filter, table, tableRows, td, i, nVisible;		input = document.getElementById("inputFilter");	theFilter = input.value.toUpperCase();	table = document.getElementById("leibniztable");	tableRows = table.getElementsByTagName("tr");	nVisible = 0;		// Loop through all table rows, and hide those who don't match the search query	for (i = 0; i < tableRows.length; i++) {		tdID = tableRows[i].getElementsByTagName("td")[0];		tdRegion = tableRows[i].getElementsByTagName("td")[1];		tdTitleQuelle = tableRows[i].getElementsByTagName("td")[2];		tdDesc = tableRows[i].getElementsByTagName("td")[3];		if(tdRegion) {			tdTitle = tdTitleQuelle.cloneNode(true);			tdTitle.removeChild(tdTitle.lastChild); // remove <a> Quelle						trContent = tdID.innerHTML.toUpperCase() + tdRegion.innerHTML.toUpperCase() + tdTitle.innerHTML.toUpperCase() + tdDesc.innerHTML.toUpperCase();			if (trContent.indexOf(theFilter) > -1)				{				tableRows[i].style.display = "";				nVisible++;				}			else				{				tableRows[i].style.display = "none";				}			}		}	console.log( nVisible + " rows");	document.getElementById("spanNumberRows").textContent= nVisible;}//------------------------------------------------------------------------------// doHashAnchor// http://mprove.de/diplom/text/3_guis.html#alto #name only in Chrome, not in Safari// issues: only called on first load. It should also be called on internal anchor jumps -> solved at mprove.js::pageInit//function doHashAnchor(){	if (window.location.hash)		{		// same as mprove.js::doHashAnchor		window.scrollBy(0, -100);				var hash = window.location.hash.substring(1);		if (document.getElementById( hash )) {			document.getElementById( hash ).classList.add("hashanchor");			}		else if (document.getElementsByName( hash )[0]) {			document.getElementsByName( hash )[0].classList.add("hashanchor");			}		// more stuff to trigger the chronolink on load		setTimeout(function(){														// wait a sec			var tableCell= document.getElementById( hash ).cells[4];				// tr with ID = HK1234, 5th column			if (tableCell) {				var chronoBtn= tableCell.getElementsByTagName("a")[0];				// 1st a				if (chronoBtn) {					var bbox= chronoBtn.getAttribute("bbox");					if (bbox)														// maybe it was a map button						document.getElementById('chronoFrame').contentWindow.postMessage( '?bb='+bbox,'https://mprove.de/');					}				}			},1000);		}		}